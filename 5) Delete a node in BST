class Solution {
public:
    
    TreeNode* insucc(TreeNode* root)
    {
        
        TreeNode* curr=root->right;
        while(curr->left!=NULL)
        {
            curr=curr->left;
        }
        
        
        
       return curr;
        
        
    }
    
    
    
    TreeNode* deleteNode(TreeNode* root, int key) {
        
        
        if(root==NULL)
        {
            return NULL;
        }
        
        if(key>root->val)
        {
            root->right=deleteNode(root->right,key);
        }
        else if(key<root->val)
        {
            root->left=deleteNode(root->left,key);
        }
        
        else        // if key==root->val
        {
           
           if(root->right==NULL)
           {
               TreeNode* temp=root->left;
               delete(root);
               return temp;
               
           }
            
            else if(root->left==NULL)
            {
                TreeNode* temp=root->right;
                delete(root);
                return temp;
                
            }
            else
            {
                TreeNode* temp=insucc(root);
                
                swap(root->val,temp->val);
                root->right=deleteNode(root->right,key);
                
            }
                
                
                
                
                
                
        }
        
        
        
        
        
        return root;
        
        
    }
};
